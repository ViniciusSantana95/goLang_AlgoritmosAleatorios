package main

import "testing"

func TestConverter(t *testing.T) {
	testCases := []struct {
		romano         string
		numeroEsperado int
	}{
		{"I", 1},
		{"II", 2},
		{"IV", 4},
		{"IX", 9},
		{"X", 10},
		{"L", 50},
		{"C", 100},
		{"D", 500},
		{"CM", 900},
		{"CMI", 901},
		{"CMII", 902},
		{"CMIII", 903},
		{"CMIV", 904},
		{"CMV", 905},
		{"CMVI", 906},
		{"CMVII", 907},
		{"CMVIII", 908},
		{"CMIX", 909},
		{"CMX", 910},
		{"CMXI", 911},
		{"CMXII", 912},
		{"CMXIII", 913},
		{"CMXIV", 914},
		{"CMXV", 915},
		{"CMXVI", 916},
		{"CMXVII", 917},
		{"CMXVIII", 918},
		{"CMXIX", 919},
		{"CMXX", 920},
		{"CMXXI", 921},
		{"CMXXII", 922},
		{"CMXXIII", 923},
		{"CMXXIV", 924},
		{"CMXXV", 925},
		{"CMXXVI", 926},
		{"CMXXVII", 927},
		{"CMXXVIII", 928},
		{"CMXXIX", 929},
		{"CMXXX", 930},
		{"CMXXXI", 931},
		{"CMXXXII", 932},
		{"CMXXXIII", 933},
		{"CMXXXIV", 934},
		{"CMXXXV", 935},
		{"CMXXXVI", 936},
		{"CMXXXVII", 937},
		{"CMXXXVIII", 938},
		{"CMXXXIX", 939},
		{"CMXL", 940},
		{"CMXLI", 941},
		{"CMXLII", 942},
		{"CMXLIII", 943},
		{"CMXLIV", 944},
		{"CMXLV", 945},
		{"CMXLVI", 946},
		{"CMXLVII", 947},
		{"CMXLVIII", 948},
		{"CMXLIX", 949},
		{"CML", 950},
		{"CMLI", 951},
		{"CMLII", 952},
		{"CMLIII", 953},
		{"CMLIV", 954},
		{"CMLV", 955},
		{"CMLVI", 956},
		{"CMLVII", 957},
		{"CMLVIII", 958},
		{"CMLIX", 959},
		{"CMLX", 960},
		{"CMLXI", 961},
		{"CMLXII", 962},
		{"CMLXIII", 963},
		{"CMLXIV", 964},
		{"CMLXV", 965},
		{"CMLXVI", 966},
		{"CMLXVII", 967},
		{"CMLXVIII", 968},
		{"CMLXIX", 969},
		{"CMLXX", 970},
		{"CMLXXI", 971},
		{"CMLXXII", 972},
		{"CMLXXIII", 973},
		{"CMLXXIV", 974},
		{"CMLXXV", 975},
		{"CMLXXVI", 976},
		{"CMLXXVII", 977},
		{"CMLXXVIII", 978},
		{"CMLXXIX", 979},
		{"CMLXXX", 980},
		{"CMLXXXI", 981},
		{"CMLXXXII", 982},
		{"CMLXXXIII", 983},
		{"CMLXXXIV", 984},
		{"CMLXXXV", 985},
		{"CMLXXXVI", 986},
		{"CMLXXXVII", 987},
		{"CMLXXXVIII", 988},
		{"M", 1000},
		{"MMXXI", 2021},
		{"MMMCMXCIX", 3999},
	}

	for _, testCase := range testCases {
		numero := ConverterRomanoParaDecimal(testCase.romano)
		if numero != testCase.numeroEsperado {
			t.Errorf("Erro: Para o numeral romano '%s', esperado %d, mas retornou %d", testCase.romano, testCase.numeroEsperado, numero)
		}
	}
}
